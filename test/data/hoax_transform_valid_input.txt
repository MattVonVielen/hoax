-module(m).

-compile([export_all, {parse_transform, hoax_transform}]).

default_action() ->
    hoax:mock(
        module:function(some_value)
     ).

underscores_become_atoms() ->
    hoax:mock(
        module:function(_)
     ).

variables_are_preserved() ->
    V = 1,
    hoax:mock(
        module:function(V)
     ).

return_values_and_actions_become_funs() ->
    hoax:mock(
        module:function() > arbitrary_return_value,
        module:function() > error(some_error)
     ).

no_expectations_becomes_empty_list() ->
    hoax:mock().

call_counts_are_converted() ->
    hoax:mock(
        never( module:function() ),
        once( module:function() ),
        twice( module:function() ),
        times(23, module:function())
    ).

funs_for_return_values_are_preserved() ->
    V = 1,
    hoax:mock(
        module:function() > fun() -> V end
    ).

allow_expectations_inside_fun_expressions() ->
    fun() -> hoax:mock( module:function() ) end.

allow_expectations_inside_try_expressions() ->
    try
        hoax:mock( module:function() )
    after
        ok
    end.